name: Electronize Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.x'  # Adjust the version according to your project requirements
        cache: true
        cache-dependency-path: '**/packages.lock.json'

    - name: Install ElectronNET.CLI
      run: dotnet tool install ElectronNET.CLI --global

    - name: Restore dependencies
      run: dotnet restore Front2

    - name: Test
      run: dotnet test --verbosity normal

    - name: Build with Electronize
      run: |
        cd Front2
        electronize build /target win

  release:
    runs-on: windows-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.x'
        cache: true
        cache-dependency-path: '**/packages.lock.json'

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        generate_release_notes: true
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: Front2/bin/Desktop/*.exe
        asset_name: electron-build-exe-${{ github.ref }}.exe
        asset_content_type: application/octet-stream
