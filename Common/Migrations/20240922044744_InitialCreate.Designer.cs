// <auto-generated />
using System;
using Common;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Common.Migrations
{
    [DbContext(typeof(RepositoryDbContext))]
    [Migration("20240922044744_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("Build", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Changed")
                        .HasColumnType("TEXT");

                    b.Property<string>("CommitId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ErrorLogs")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Queued")
                        .HasColumnType("TEXT");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CommitId");

                    b.ToTable("Build");
                });

            modelBuilder.Entity("Commit", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AuthorEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Commit");
                });

            modelBuilder.Entity("Pipeline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("LastId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LastSuccessfulId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LastId");

                    b.HasIndex("LastSuccessfulId");

                    b.ToTable("Pipeline");
                });

            modelBuilder.Entity("Repository", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CloneUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("MasterClonned")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PipelineId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Project")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PipelineId");

                    b.ToTable("Repositories");
                });

            modelBuilder.Entity("Build", b =>
                {
                    b.HasOne("Commit", "Commit")
                        .WithMany()
                        .HasForeignKey("CommitId");

                    b.Navigation("Commit");
                });

            modelBuilder.Entity("Pipeline", b =>
                {
                    b.HasOne("Build", "Last")
                        .WithMany()
                        .HasForeignKey("LastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Build", "LastSuccessful")
                        .WithMany()
                        .HasForeignKey("LastSuccessfulId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Last");

                    b.Navigation("LastSuccessful");
                });

            modelBuilder.Entity("Repository", b =>
                {
                    b.HasOne("Pipeline", "Pipeline")
                        .WithMany()
                        .HasForeignKey("PipelineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pipeline");
                });
#pragma warning restore 612, 618
        }
    }
}
