@using Common.Models
@using System.Collections.Generic
@using System.Linq

<div class="input-group mb-3">
    <span class="input-group-text">
        <i class="bi bi-server me-2"></i>@GetServiceType()
    </span>
    <select value="@SelectedEnvironmentName" @onchange="OnEnvironmentChanged" class="form-select environment-dropdown @GetSelectedEnvironmentClass()" aria-label="Select environment">
        <option value="">Select Environment</option>
        @if (Environments != null)
        {
            @foreach (var env in Environments)
            {
                <option value="@env.Name" class="@GetEnvironmentClass(env)">
                    @env.Name @(env.IsProduction ? " (Production)" : " (Non-Production)")
                </option>
            }
        }
    </select>
</div>

<style>
    .input-group .form-select {
        border-radius: 0;
    }

    .input-group .input-group-text {
        background-color: #f8f9fa;
        border-color: #ced4da;
        font-weight: 600;
        color: #495057;
        display: flex;
        align-items: center;
    }

    .input-group .input-group-text i {
        color: #6c757d;
    }

    .environment-dropdown {
        font-size: 0.875rem;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

    .environment-dropdown:focus {
        border-color: #86b7fe;
        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
    }

    .form-select.production-env {
        background-color: #fff3cd;
        color: #856404;
        font-weight: 500;
    }

    .form-select.non-production-env {
        background-color: #d4edda;
        color: #155724;
    }

    .production-env {
        background-color: #fff3cd !important;
        color: #856404 !important;
        font-weight: 500;
    }

    .non-production-env {
        background-color: #d4edda !important;
        color: #155724 !important;
    }

    .production-env:hover,
    .production-env:focus {
        background-color: #ffeaa7 !important;
        color: #856404 !important;
    }

    .non-production-env:hover,
    .non-production-env:focus {
        background-color: #c3e6cb !important;
        color: #155724 !important;
    }
</style>

@code {
    [Parameter]
    public IEnumerable<IEnvironment> Environments { get; set; }

    [Parameter]
    public string SelectedEnvironmentName { get; set; } = string.Empty;

    [Parameter]
    public EventCallback<string> SelectedEnvironmentNameChanged { get; set; }

    private string GetServiceType()
    {
        var env = Environments?.FirstOrDefault(e => e.Name == SelectedEnvironmentName);
        return env?.ServiceType ?? "None";
    }

    private string GetEnvironmentClass(IEnvironment env)
    {
        return env?.IsProduction == true ? "production-env" : "non-production-env";
    }

    private string GetSelectedEnvironmentClass()
    {
        var env = Environments?.FirstOrDefault(e => e.Name == SelectedEnvironmentName);
        return env != null ? GetEnvironmentClass(env) : string.Empty;
    }

    private async Task OnEnvironmentChanged(ChangeEventArgs e)
    {
        var newValue = e.Value?.ToString() ?? string.Empty;
        if (SelectedEnvironmentName != newValue)
        {
            SelectedEnvironmentName = newValue;
            await SelectedEnvironmentNameChanged.InvokeAsync(newValue);
        }
    }
}