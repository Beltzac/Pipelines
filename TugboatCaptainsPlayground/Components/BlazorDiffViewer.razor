@using Common.Models
@using CSharpDiff.Patches.Models
@using CSharpDiff.Diffs.Models

@if (Diff?.Patch != null)
{
    <div class="diff-container">
        <div class="diff-header">
            @if (Diff.Patch.OldFileName == Diff.Patch.NewFileName)
            {
                <span>@Diff.Patch.OldFileName</span>
            }
            else
            {
                <span>@Diff.Patch.OldFileName ↔ @Diff.Patch.NewFileName</span>
            }
        </div>
        <div class="diff-controls">
            <div class="controls-left">@LeftButtons</div>
            <div class="controls-right">@RightButtons</div>
        </div>

        @foreach (var hunk in Diff.Patch.Hunks)
        {
            <div class="hunk">
                <div class="hunk-header">@@ -@hunk.oldStart,@hunk.oldLines +@hunk.newStart,@hunk.newLines @@</div>
                @{
                    var oldLines = hunk.lines.Where(l => l.StartsWith("-") || l.StartsWith(" ")).ToList();
                    var newLines = hunk.lines.Where(l => l.StartsWith("+") || l.StartsWith(" ")).ToList();
                    int max = Math.Max(oldLines.Count, newLines.Count);
                }
                <div class="panels">
                    <div class="panel old-panel">
                        @for (int i = 0; i < max; i++)
                        {
                            var oldLine = i < oldLines.Count ? oldLines[i] : null;
                            bool isContext = oldLine?.StartsWith(" ") == true;
                            string cls = oldLine?.StartsWith("-") == true ? "removed" : isContext ? "context" : "empty";
                            int num = !string.IsNullOrWhiteSpace(oldLine) && !oldLine.StartsWith("+") ? hunk.oldStart + oldLines.Take(i).Count(l => !l.StartsWith("+")) : -1;
                            <div class="line @cls">
                                <span class="lineno">@(num > 0 ? num.ToString() : string.Empty)</span>
                                <span class="code">@(oldLine != null ? oldLine.Substring(1) : string.Empty)</span>
                            </div>
                        }
                    </div>
                    <div class="panel new-panel">
                        @for (int i = 0; i < max; i++)
                        {
                            var newLine = i < newLines.Count ? newLines[i] : null;
                            bool isContext = newLine?.StartsWith(" ") == true;
                            string cls = newLine?.StartsWith("+") == true ? "added" : isContext ? "context" : "empty";
                            int num = !string.IsNullOrWhiteSpace(newLine) && !newLine.StartsWith("-") ? hunk.newStart + newLines.Take(i).Count(l => !l.StartsWith("-")) : -1;
                            <div class="line @cls">
                                <span class="lineno">@(num > 0 ? num.ToString() : string.Empty)</span>
                                <span class="code">@(newLine != null ? newLine.Substring(1) : string.Empty)</span>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="no-diff"><p>No differences to display.</p></div>
}

@code {
    [Parameter] public IDiffResult Diff { get; set; }
    [Parameter] public RenderFragment LeftButtons { get; set; }
    [Parameter] public RenderFragment RightButtons { get; set; }
}

<style>
:root {
    --font-mono: Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace;

    --c-border : #d0d7de;
    --c-file   : #f6f8fa;
    --c-ctrls  : #fafbfc;
    --c-hunk   : #eef6ff;
    --c-lineno : #f0f3f6;

    --c-added  : #e6ffed;
    --c-removed: #ffeef0;
    --c-context: #f9f9f9;

    --h-header : 36px;          /* tweak if you change paddings */
    --h-ctrls  : 32px;
}

/* ───────── wrapper ───────── */
.diff-container {
    font-family: var(--font-mono);
    font-size: 14px;
    background: #fff;
    border: 1px solid var(--c-border);
    border-radius: 6px;
    overflow: hidden;           /* rounds the corners */
}

/* ───────── sticky header & toolbar ───────── */
.diff-header,
.diff-controls {
    padding: 8px 12px;
    border-bottom: 1px solid var(--c-border);
    position: sticky;
    z-index: 2;
}
.diff-header  { top: 0;           background: var(--c-file);   font-weight: 600; }
.diff-controls{
    top: var(--h-header);        background: var(--c-ctrls);
    display: flex; justify-content: space-between; gap: 16px;
}

/* ───────── hunk banner ───────── */
.hunk-header{
    background: var(--c-hunk);
    padding: 4px 12px;
    font-style: italic;
    border-top: 1px solid var(--c-border);
    border-bottom: 1px solid var(--c-border);
    position: sticky;
    top: calc(var(--h-header) + var(--h-ctrls));
    z-index: 1;
}
.hunk{ margin:0; }

/* ───────── two side‑by‑side panels ───────── */
.panels { display: flex; gap: 1px; }

.panel{
    flex: 1 1 0;
    overflow-x: auto;            /* independent horizontal scroll */
    white-space: pre;
}

/* ───────── individual lines ───────── */
.line     { display: flex; min-height: 20px; width: max-content; min-width: 100%; } /* Ensure line expands */
.lineno   {
    width: 5ch; flex-shrink: 0; text-align: right;
    padding: 0 6px; margin-right: 6px;
    color: #6e7781; background: var(--c-lineno);
    border-right: 1px solid var(--c-border);
    position: sticky; left: 0;   /* sticks inside each panel */
    user-select: none;
}
.empty .lineno{ visibility: hidden; }

.code { flex: 1; padding-right: 12px; }

/* ───────── highlighting ───────── */

    /* Apply highlights directly to the line */
    .added {
        background: var(--c-added);
    }
    .removed {
        background: var(--c-removed);
    }
    .context {
        background: var(--c-context);
    }

    /* Ensure empty lines don't get backgrounds */
    .empty {
        background: transparent !important;
    }

    /* Remove background from code span */
    .added > .code,
    .removed > .code,
    .context > .code {
        background: transparent;
    }


/* ───────── “no diff” state ───────── */
.no-diff{
    display: flex; justify-content: center; align-items: center;
    padding: 48px 0; color: #555; font-style: italic;
}

    .lineno {
        min-width: 5ch;
        width: auto;
    }

    .no-diff {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100%; /* Ensure it takes the full height of its container */
    }

    .panel {
        border-right: 1px solid var(--c-border);
    }

        .panel:last-child {
            border-right: none;
        }

</style>
