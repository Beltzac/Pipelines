@using Common.Models
@using CSharpDiff.Patches.Models
@using CSharpDiff.Diffs.Models

@if (Diff?.Patch != null)
{
    <div class="diff-container">
        <div class="diff-header">
            @if (Diff.Patch.OldFileName == Diff.Patch.NewFileName)
            {
                <span>@Diff.Patch.OldFileName</span>
            }
            else
            {
                <span>@Diff.Patch.OldFileName â†” @Diff.Patch.NewFileName</span>
            }
        </div>

        <div class="diff-controls">
            <div class="controls-left">@LeftButtons</div>
            <div class="controls-right">@RightButtons</div>
        </div>

        @foreach (var hunk in Diff.Patch.Hunks)
        {
            <div class="hunk">
                <div class="hunk-header">@@ -@hunk.oldStart,@hunk.oldLines +@hunk.newStart,@hunk.newLines @@</div>
                @{
                    var oldLines = hunk.lines.Where(l => l.StartsWith("-") || l.StartsWith(" ")).ToList();
                    var newLines = hunk.lines.Where(l => l.StartsWith("+") || l.StartsWith(" ")).ToList();
                    int max = Math.Max(oldLines.Count, newLines.Count);
                }
                <div class="panels">
                    <div class="panel old-panel">
                        @for (int i = 0; i < max; i++)
                        {
                            var oldLine = i < oldLines.Count ? oldLines[i] : null;
                            bool isContext = oldLine?.StartsWith(" ") == true;
                            string cls = oldLine?.StartsWith("-") == true ? "removed" : isContext ? "context" : "empty";
                            int num = !string.IsNullOrWhiteSpace(oldLine) && !oldLine.StartsWith("+") ? hunk.oldStart + oldLines.Take(i).Count(l => !l.StartsWith("+")) : -1;
                            <div class="line @cls">
                                <span class="lineno">@(num > 0 ? num.ToString() : string.Empty)</span>
                                <span class="code">@(oldLine != null ? oldLine.Substring(1) : string.Empty)</span>
                            </div>
                        }
                    </div>
                    <div class="panel new-panel">
                        @for (int i = 0; i < max; i++)
                        {
                            var newLine = i < newLines.Count ? newLines[i] : null;
                            bool isContext = newLine?.StartsWith(" ") == true;
                            string cls = newLine?.StartsWith("+") == true ? "added" : isContext ? "context" : "empty";
                            int num = !string.IsNullOrWhiteSpace(newLine) && !newLine.StartsWith("-") ? hunk.newStart + newLines.Take(i).Count(l => !l.StartsWith("-")) : -1;
                            <div class="line @cls">
                                <span class="lineno">@(num > 0 ? num.ToString() : string.Empty)</span>
                                <span class="code">@(newLine != null ? newLine.Substring(1) : string.Empty)</span>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="no-diff"><p>No differences to display.</p></div>
}

@code {
    [Parameter] public IDiffResult Diff { get; set; }
    [Parameter] public RenderFragment LeftButtons { get; set; }
    [Parameter] public RenderFragment RightButtons { get; set; }
}

<style>
    :root {
        --font-mono: ui-monospace, 'SFMono-Regular', Consolas, Menlo, monospace;
        --border: #d0d7de;
        --bg-stage: #ffffff;
        --bg-header: #f6f8fa;
        --bg-toolbar: #fbfcfd;
        --bg-hunk: #eef6ff;
        --bg-lineno: #f0f3f6;
        --bg-added: #e6ffed;
        --bg-removed: #ffeef0;
        --bg-context: transparent;
        --line-height: 20px;
    }

    /* File wrapper --------------------------------------------------- */
    .diff-file {
        border: 1px solid var(--border);
        border-radius: 6px;
        overflow: hidden;
        font-family: var(--font-mono);
        font-size: 13px;
        background: var(--bg-stage);
    }

    /* Sticky header -------------------------------------------------- */
    .diff-header {
        position: sticky;
        top: 0;
        z-index: 3;
        padding: 8px 12px;
        border-bottom: 1px solid var(--border);
        font-weight: 600;
        background: var(--bg-header);
    }

    /* Toolbar / Controls (supports either markup) -------------------- */
    .toolbar,
    .diff-controls {
        position: sticky;
        top: 36px; /* height of .diff-header */
        z-index: 2;
        padding: 8px 12px;
        border-bottom: 1px solid var(--border);
        background: var(--bg-toolbar);
        /* layout */
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 1rem;
        /* handle overflow */
        overflow-x: auto;
        white-space: nowrap;
    }

    .toolbar-left,
    .controls-left {
        display: flex;
        align-items: center;
        gap: .5rem;
    }

    .toolbar-right,
    .controls-right {
        display: flex;
        align-items: center;
        gap: .5rem;
        margin-left: auto; /* push to the far right */
    }

    /* Hunks ---------------------------------------------------------- */
    .hunk-header {
        padding: 4px 12px;
        border-top: 1px solid var(--border);
        border-bottom: 1px solid var(--border);
        background: var(--bg-hunk);
        font-style: italic;
        position: sticky;
        top: 68px; /* header + controls */
        z-index: 1;
    }

    /* Panels grid ---------------------------------------------------- */
    .panels {
        display: grid;
        grid-template-columns: 1fr 1fr;
    }

    .panel {
        overflow-x: auto;
        border-right: 1px solid var(--border);
    }

        .panel:last-child {
            border-right: none;
        }

    /* Lines ---------------------------------------------------------- */
    .line {
        display: grid;
        grid-template-columns: minmax(5ch,auto) 1fr;
        min-height: var(--line-height);
        width: max-content; /* enable horizontal scroll for very long lines */
    }

    .lineno {
        text-align: right;
        padding: 0 6px;
        background: var(--bg-lineno);
        color: #6e7781;
        border-right: 1px solid var(--border);
        position: sticky;
        left: 0;
        user-select: none;
    }

    .blank .lineno {
        visibility: hidden;
    }

    /* backgrounds */
    .added {
        background: var(--bg-added);
    }

    .removed {
        background: var(--bg-removed);
    }

    .context {
        background: var(--bg-stage);
    }

    .blank {
        background: var(--bg-stage);
    }

    /* code cell */
    .code {
        padding: 0 12px 0 6px;
        white-space: pre; /* keep spacing */
    }

    /* No diff -------------------------------------------------------- */
    .no-diff {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 4rem 0;
        color: #555;
        font-style: italic;
    }
</style>
