<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <ApplicationInsightsInit @rendermode="@InteractiveServer" />
    <link rel="icon" type="image/ico" href="favicon.ico" />

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

    <link rel="stylesheet" href="bootstrap/bootstrap.min.css" />

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.10.0/styles/default.min.css">
@*     <link rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/styles/github-dark.min.css"/> *@

    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/diff2html/bundles/css/diff2html.min.css" /> 

    <link rel="stylesheet" href="app.css" />
    <link rel="stylesheet" href="Front2.styles.css" />
    <link href="_content/Blazor.ContextMenu/blazorContextMenu.min.css" rel="stylesheet" />

    <HeadOutlet @rendermode="InteractiveServer" />
</head>

<body>
    <Routes @rendermode="InteractiveServer" />
    <script>process = undefined;</script>
    <script src="_framework/blazor.web.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.10.0/highlight.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.10.0/languages/sql.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/diff2html/bundles/js/diff2html-ui-base.min.js"></script>
    <script src="_content/Blazor.ContextMenu/blazorContextMenu.min.js"></script>

    <script>
        // Abrir links externamente
        document.body.addEventListener('click', event => {
            if (event.target.tagName.toLowerCase() === 'a' && event.target.target === '_blank') {
                event.preventDefault();
                DotNet.invokeMethodAsync('Front2', 'OpenExternal', event.target.href);
            }
        });
    </script>

</body>

</html>

@code {
    [JSInvokable]
    public static async Task OpenExternal(string url)
    {
        if (ElectronNET.API.HybridSupport.IsElectronActive)
        {
            await ElectronNET.API.Electron.Shell.OpenExternalAsync(url);
        }
        else
        {
            url = url.Replace("&", "^&");
            System.Diagnostics.Process.Start(new System.Diagnostics.ProcessStartInfo(url) { UseShellExecute = true });
        }
    }
}