@page "/config-manager"
@using Common.Models
@inject IConfigurationService ConfigService
@inject IToastService ToastService

<h3>Configuration Manager</h3>

<EditForm Model="@config" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="card mb-3">
        <div class="card-header">User Configuration</div>
        <div class="card-body">
            <div class="form-group">
                <label for="username">Username</label>
                <InputText id="username" @bind="config.Username" class="form-control" />
                <ValidationMessage For="@(() => config.Username)" />
            </div>
            <div class="form-group">
                <label for="pat">Personal Access Token (PAT)</label>
                <InputText id="pat" @bind="config.PAT" class="form-control" />
                <ValidationMessage For="@(() => config.PAT)" />
            </div>
        </div>
    </div>

    <div class="card mb-3">
        <div class="card-header">Organization Configuration</div>
        <div class="card-body">
            <div class="form-group">
                <label for="orgUrl">Organization URL</label>
                <InputText id="orgUrl" @bind="config.OrganizationUrl" class="form-control" />
                <ValidationMessage For="@(() => config.OrganizationUrl)" />
            </div>
            <div class="form-group">
                <label for="cloneFolder">Local Clone Folder</label>
                <InputText id="cloneFolder" @bind="config.LocalCloneFolder" class="form-control" />
                <ValidationMessage For="@(() => config.LocalCloneFolder)" />
            </div>
        </div>
    </div>

    @for (int i = 0; i < config.ConsulEnvironments.Count; i++)
    {
        <div class="card mb-3">
            <div class="card-header">@config.ConsulEnvironments[i].Name Configuration</div>
            <div class="card-body">
                <div class="form-group">
                    <label for="consulName">Consul Environment Name</label>
                    <InputText id="consulName" @bind="config.ConsulEnvironments[i].Name" class="form-control" />
                    <ValidationMessage For="@(() => config.ConsulEnvironments[i].Name)" />
                </div>
                <div class="form-group">
                    <label for="consulUrl">Consul URL</label>
                    <InputText id="consulUrl" @bind="config.ConsulEnvironments[i].ConsulUrl" class="form-control" />
                    <ValidationMessage For="@(() => config.ConsulEnvironments[i].ConsulUrl)" />
                </div>
                <div class="form-group">
                    <label for="consulFolder">Consul Folder</label>
                    <InputText id="consulFolder" @bind="config.ConsulEnvironments[i].ConsulFolder" class="form-control" />
                    <ValidationMessage For="@(() => config.ConsulEnvironments[i].ConsulFolder)" />
                </div>
                <div class="form-group">
                    <label for="consulToken">Consul Token</label>
                    <InputText id="consulToken" @bind="config.ConsulEnvironments[i].ConsulToken" class="form-control" />
                    <ValidationMessage For="@(() => config.ConsulEnvironments[i].ConsulToken)" />
                </div>
                <button type="button" class="btn btn-danger" @onclick="() => RemoveConsulEnvironment(i)">Remove</button>
            </div>
        </div>
        if (config.ConsulEnvironments.Count == 1)
        {
            selectedConsulEnv = config.ConsulEnvironments[0].Name;
        }
    }

    <button type="button" class="btn btn-secondary" @onclick="AddConsulEnvironment">Add Consul Environment</button>

    <div class="card mb-3">
        <div class="card-header">GitHub Configuration</div>
        <div class="card-body">
            <div class="form-group">
                <label for="githubToken">Github Token</label>
                <InputText id="githubToken" @bind="config.AccessToken" class="form-control" />
                <ValidationMessage For="@(() => config.AccessToken)" />
            </div>
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

@code {
    private ConfigModel config = new ConfigModel();

    protected override void OnInitialized()
    {
        config = ConfigService.GetConfig();
    }

    private string? selectedConsulEnv;

    private void AddConsulEnvironment()
    {
        config.ConsulEnvironments.Add(new ConsulEnvironment());
    }

    private void RemoveConsulEnvironment(int index)
    {
        config.ConsulEnvironments.RemoveAt(index);
    }

    private async Task HandleValidSubmit()
    {
        await ConfigService.SaveConfigAsync(config);
        ToastService.ShowSuccess("Configuration saved successfully!");
    }

    private void OnConsulEnvironmentSelected(ChangeEventArgs e)
    {
        selectedConsulEnv = e.Value?.ToString();
    }
}
