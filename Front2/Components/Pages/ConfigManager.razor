@page "/config-manager"
@using Common.Models
@inject IConfigurationService ConfigService
@inject IToastService ToastService

<h3>Configuration Manager</h3>

<EditForm Model="@config" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="card mb-3">
        <div class="card-header">User Configuration</div>
        <div class="card-body">
            <div class="form-group">
                <label for="username">Username</label>
                <InputText id="username" @bind-Value="config.Username" class="form-control" />
                <ValidationMessage For="@(() => config.Username)" />
            </div>
            <div class="form-group">
                <label for="pat">Personal Access Token (PAT)</label>
                <InputText id="pat" @bind-Value="config.PAT" class="form-control" />
                <ValidationMessage For="@(() => config.PAT)" />
            </div>
        </div>
    </div>

    <div class="card mb-3">
        <div class="card-header">Organization Configuration</div>
        <div class="card-body">
            <div class="form-group">
                <label for="orgUrl">Organization URL</label>
                <InputText id="orgUrl" @bind-Value="config.OrganizationUrl" class="form-control" />
                <ValidationMessage For="@(() => config.OrganizationUrl)" />
            </div>
            <div class="form-group">
                <label for="cloneFolder">Local Clone Folder</label>
                <InputText id="cloneFolder" @bind-Value="config.LocalCloneFolder" class="form-control" />
                <ValidationMessage For="@(() => config.LocalCloneFolder)" />
            </div>
        </div>
    </div>

    @foreach (var consulEnv in config.ConsulEnvironments)
    {
        <div class="card mb-3">
            <div class="card-header">@consulEnv.Name Configuration</div>
            <div class="card-body">
                <div class="form-group">
                    <label for="consulName">Consul Environment Name</label>
                    <InputText id="consulName" @bind-Value="consulEnv.Name" class="form-control" />
                    <ValidationMessage For="@(() => consulEnv.Name)" />
                </div>
                    <label for="consulUrl">Consul URL</label>
                    <InputText id="consulUrl" @bind-Value="consulEnv.ConsulUrl" class="form-control" />
                    <ValidationMessage For="@(() => consulEnv.ConsulUrl)" />
                </div>
                <div class="form-group">
                    <label for="consulFolder">Consul Folder</label>
                    <InputText id="consulFolder" @bind-Value="consulEnv.ConsulFolder" class="form-control" />
                    <ValidationMessage For="@(() => consulEnv.ConsulFolder)" />
                </div>
                <div class="form-group">
                    <label for="consulToken">Consul Token</label>
                    <InputText id="consulToken" @bind-Value="consulEnv.ConsulToken" class="form-control" />
                    <ValidationMessage For="@(() => consulEnv.ConsulToken)" />
                </div>
            </div>
        </div>
    }

    <div class="card mb-3">
        <div class="card-header">GitHub Configuration</div>
        <div class="card-body">
            <div class="form-group">
                <label for="githubToken">Github Token</label>
                <InputText id="githubToken" @bind-Value="config.AccessToken" class="form-control" />
                <ValidationMessage For="@(() => config.AccessToken)" />
            </div>
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

@code {
    private ConfigModel config = new ConfigModel();

    protected override void OnInitialized()
    {
        config = ConfigService.GetConfig();
        selectedConsulEnv = config.ConsulEnvironments.FirstOrDefault();
    }

    private async Task HandleValidSubmit()
    {
        await ConfigService.SaveConfigAsync(config);
        ToastService.ShowSuccess("Configuration saved successfully!");
    }
}
