@page "/consul"
@inject ISignalRClientService SignalRClientService
@using Common
@using Common.Services
@using Markdig
@using Microsoft.AspNetCore.Components.Forms
@using System.Text.RegularExpressions
@using System.Reactive.Subjects
@using System.Reactive.Linq
@inject IToastService toastService
@rendermode InteractiveServer
@inject IJSRuntime JS
@inject IConsulService ConsulService
@inject ICommitDataExportService CommitDataExportService


<h3>Consul</h3>

<div class="mb-3">
    <label for="consulEditor" class="form-label">Consul Editor</label>
    <input type="text" class="form-control" placeholder="Search keys..." @bind="searchTerm" />

    <ul>
        @foreach (var kvp in filteredConsulKeyValues)
        {
            <li>
                <button class="btn btn-link" @onclick="() => ToggleKeyVisibility(kvp.Key)">
                    @kvp.Key
                </button>
                @if (visibleKeys.Contains(kvp.Key))
                {
                    <pre>@kvp.Value</pre>
                }
            </li>
        }
    </ul>
</div>

<button class="btn btn-primary text-nowrap" @onclick="async () => await DownloadConsul()">Download Consul</button>
<button class="btn btn-success text-nowrap" @onclick="async () => await SaveConsul()">Save Consul</button>



@code {

    private Dictionary<string, string> consulKeyValues = new Dictionary<string, string>();
    private List<string> visibleKeys = new List<string>();
    private string searchTerm = string.Empty;

    private IEnumerable<KeyValuePair<string, string>> filteredConsulKeyValues =>
        consulKeyValues.Where(kvp => kvp.Key.Contains(searchTerm, StringComparison.OrdinalIgnoreCase));

    private async ValueTask DownloadConsul()
    {
        consulKeyValues = await ConsulService.GetConsulKeyValues();
        toastService.ShowSuccess("Consul key-values downloaded successfully!");
    }

    private void ToggleKeyVisibility(string key)
    {
        if (visibleKeys.Contains(key))
        {
            visibleKeys.Remove(key);
        }
        else
        {
            visibleKeys.Add(key);
        }
    }

    private async Task SaveConsul()
    {
        // Logic to save the edited Consul content
        // This is a placeholder for the actual implementation
        toastService.ShowSuccess("Consul content saved successfully!");
    }
}
