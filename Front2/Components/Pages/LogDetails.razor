@page "/logdetails/{BuildId}"
@using Common.Services
@using Markdig
@using Microsoft.AspNetCore.Components
@using Microsoft.JSInterop
@using System.Text.RegularExpressions
@using Common
@using Common.Utils
@inject IBuildInfoService BuildInfoService
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<script>
    function scrollToLastError() {
        console.log("Scrolling to the last error");
        const errorElements = document.querySelectorAll('.log-error');
        if (errorElements.length > 0) {
            const lastErrorElement = errorElements[errorElements.length - 1];
            lastErrorElement.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }
    }
</script>

@if (errorLogs == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <pre>@((MarkupString)errorLogs)</pre>
}

@code {
    [Parameter]
    public string BuildId { get; set; }

    private string errorLogs;

    protected override async Task OnInitializedAsync()
    {
        if (Guid.TryParse(BuildId, out Guid guid))
        {
            errorLogs = await BuildInfoService.GetBuildErrorLogsAsync(guid);
        }
        else
        {
            errorLogs = "Invalid build ID.";
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

        await JSRuntime.InvokeVoidAsync("scrollToLastError");

    }
}
